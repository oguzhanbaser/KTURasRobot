#include <stdio.h>
#include <stdlib.h>
#include <vector>
#include <iostream>

#include "ros/ros.h"

#include "std_msgs/MultiArrayLayout.h"
#include "std_msgs/MultiArrayDimension.h"
#include "std_msgs/Float32MultiArray.h"

float Arr[90];
//void arrayCallback(const std_msgs::Float32MultiArray::ConstPtr& array);



void arrayCallback(const std_msgs::Float32MultiArray::ConstPtr& array)
{

	int i = 0;
	for(std::vector<float>::const_iterator it = array->data.begin(); it != array->data.end(); ++it)
	{
		Arr[i] = *it;
		i++;
	}

    for(int j = 0; j < 4; j++)
	{
		ROS_INFO("%.1f, ", Arr[j]);
	}


}

int main(int argc, char **argv)
{

    ros::init(argc, argv, "listener");

	ros::NodeHandle n;	

	ros::Subscriber sub3 = n.subscribe("angulos", 100, arrayCallback);

    ros::spin();
	return 0;
    
}

